<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--扫描controller注解-->
    <context:component-scan base-package="com.edu.controller"></context:component-scan>
    <!--配置视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix"  value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>
    <!--开启mvc注解驱动 自动注册最合适的处理器映射器  处理器适配器(调用handler)-->
    <!--不开启有默认的 处理器映射器 处理器适配器-->
    <mvc:annotation-driven conversion-service="conversionService" />
    <!--注册⾃定义类型转换器   必须与mvc:annotation-driven连用 进行关联,处理器适配器(调用handler)-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
              <bean  class="com.edu.utils.DateConverter"></bean>
            </set>
        </property>
    </bean>

    <!--静态资源配置 方案一-->
    <!--原理 : 添加改标签 会在springmvc添加 DefaultServletHttpRequestHandler对象 这个对象如同一个检查员
    对进入DispatcherServlet请求进行过滤筛查,如果发现是一个静态资源的请求 那么会把请求 转由web应用服务器默认
    的defaultServlet处理 如果不是静态资源的请求 那么继续由springmvc处理
    -->
    <!--缺点 静态资源只能放在webapp 根目录下-->
    <mvc:default-servlet-handler />

    <!--静态资源配置 二 SpringMVC自己处理静态资源
    mapping :约定的静态资源的url规则
    location : 指定静态资源存放的位置
    / 是webapp根目录  classpath 是resources 根目录
    -->
    <mvc:resources location="/,classpath:/" mapping="/resources/**"  />
    <!--配置拦截器-->
    <mvc:interceptors>
        <!--默认拦截所有的请求-->
        <!--<bean  class="com.edu.intercept.MyIntercept1"></bean>-->

        <mvc:interceptor>
            <!--/是根目录  **是子目录及其子目录-->
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/**"/><!--先有mapping 才有exclude-mapping-->
            <bean  class="com.edu.intercept.MyIntercept1"></bean>

        </mvc:interceptor>
        <mvc:interceptor>
            <!--/是根目录  **是子目录及其子目录-->
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/**"/><!--先有mapping 才有exclude-mapping-->
            <bean  class="com.edu.intercept.MyIntercept2"></bean>

        </mvc:interceptor>
    </mvc:interceptors>
</beans>
